{
  "id": "c9ebf40b-7db9-4836-92b6-6b47cf7b114e",
  "realm": "inheartive",
  "displayName": "inHEARTive",
  "displayNameHtml": "in<string>HEART</strong>ive",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": false,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 30,
  "roles": {
    "realm": [
      {
        "id": "65802a42-7ffd-4939-a952-f23c6032599c",
        "name": "default-roles-inheartive",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": ["offline_access", "uma_authorization"],
          "client": {
            "account": ["view-profile", "manage-account"]
          }
        },
        "clientRole": false,
        "containerId": "c9ebf40b-7db9-4836-92b6-6b47cf7b114e",
        "attributes": {}
      },
      {
        "id": "857cb49a-0250-4722-9be4-5c5c9f30c3b1",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "c9ebf40b-7db9-4836-92b6-6b47cf7b114e",
        "attributes": {}
      },
      {
        "id": "be16d559-6a6e-464e-9430-7e150e8414f7",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "c9ebf40b-7db9-4836-92b6-6b47cf7b114e",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "d3de1cb7-7fe7-43be-8c25-2243934a3512",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "4732fbbf-ed42-42b5-8339-d1d94a1c85ad",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients",
                "manage-authorization",
                "manage-clients",
                "manage-realm",
                "manage-identity-providers",
                "view-events",
                "view-identity-providers",
                "manage-users",
                "create-client",
                "view-clients",
                "impersonation",
                "manage-events",
                "query-users",
                "view-authorization",
                "query-groups",
                "view-users",
                "view-realm",
                "query-realms"
              ]
            }
          },
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "50824356-6449-4b3e-a490-e3c2f8c009b6",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "b1055e67-e2af-4a4f-b817-ad2d4551b410",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "83d87104-2eff-44a2-beef-43263c729a01",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "1faf55c0-c399-4af2-a9b5-57da6d8f7add",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "dce6daa3-cd77-4963-9825-86decbe9ceda",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "999eb713-58ee-4d75-b0e9-c9af2bb30c71",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "de91a1dc-197a-4a5a-9b30-2ee67a927890",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "c9cab1bd-34dd-4e6e-812d-a03c5b08ce58",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "e79165a9-f87b-4125-9fea-6b004f05afe5",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-clients"]
            }
          },
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "fb827c6e-9641-49e3-ba0c-e683448ef5f7",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "11d49f70-5000-49b5-bad7-f64204a1f9e0",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "45f1fc08-cd47-4579-804e-29027ef66ab1",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "b7dbd61b-0baa-4888-87b9-4ae562d2eda0",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "73675235-4567-4037-9484-c6b01335633a",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "5771b0b1-3e69-4c7b-a815-66d39f7e07c2",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": ["query-users", "query-groups"]
            }
          },
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "d66d7820-4de0-40c7-a411-7332e480f018",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        },
        {
          "id": "97971358-e439-4bb5-b742-a834b0457a79",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
          "attributes": {}
        }
      ],
      "security-admin-console": [],
      "admin-cli": [],
      "account-console": [],
      "nestjs": [],
      "broker": [
        {
          "id": "dcb7d189-6a57-4833-b80e-bc4d979a2cf5",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "3950cd36-a7e5-4def-a942-afbcf759fcbf",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "9acdcc91-0fd9-40a4-87ae-02692791d4b3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "4c754962-6559-4076-8ad9-4067ba5c0ea2",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["view-consent"]
            }
          },
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "857bc75b-44cf-495f-b275-7801f884b277",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "f70ce8ae-5f18-4b2e-a2b2-798606239463",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "e605a105-d879-4198-80fa-5af6f64d5e00",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "cca58b47-ee5e-4df7-bb08-b4f04e370ee3",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "40a76b5d-6f94-4b95-b9ae-6f80e82540c6",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        },
        {
          "id": "8dde3863-80db-41d7-8a97-b8d7e09c2c47",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": ["manage-account-links"]
            }
          },
          "clientRole": true,
          "containerId": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "65802a42-7ffd-4939-a952-f23c6032599c",
    "name": "default-roles-inheartive",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "c9ebf40b-7db9-4836-92b6-6b47cf7b114e"
  },
  "requiredCredentials": ["password"],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpPolicyCodeReusable": false,
  "otpSupportedApplications": ["totpAppGoogleName", "totpAppFreeOTPName"],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": ["ES256"],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": ["ES256"],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "f97475f9-8f83-424d-a619-65383baca8c6",
      "createdTimestamp": 1668545776348,
      "username": "admin",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "John",
      "lastName": "Admin",
      "email": "admin@inheartive.io",
      "credentials": [
        {
          "id": "2cd227c3-a154-48e6-88d4-46a3f0e59fc3",
          "type": "password",
          "userLabel": "Password1",
          "createdDate": 1668545787554,
          "secretData": "{\"value\":\"5mOKq6fE7vtX0yyzGIs0DlxAt0Z/tZPKH/cjtvWxpDAd1gixr5PU2NQgXQCSwa+roaqgv/6RTDHUBhlId2g+Yg==\",\"salt\":\"QzZ2v1Rf/nRRYkhodwNodw==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-inheartive"],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "ab257e1a-1b76-4bca-a697-0a8da8958e25",
      "createdTimestamp": 1668545806105,
      "username": "user",
      "enabled": true,
      "totp": false,
      "emailVerified": true,
      "firstName": "Jane",
      "lastName": "User",
      "email": "user@inheartive.io",
      "credentials": [
        {
          "id": "9a36cc89-abe1-4833-8a89-9f6ed3cf2715",
          "type": "password",
          "userLabel": "Password1",
          "createdDate": 1668545819425,
          "secretData": "{\"value\":\"k7VAhTyR6tmSSIOns1dskxR+uFVvC3S6IhQyGI2oG/XZL/JVDdh/Gl3VnYnVw+Xpcc8w9ZApvELGcVqTbHfi/Q==\",\"salt\":\"KdgxELSUEHGib8zOr+9GiA==\",\"additionalParameters\":{}}",
          "credentialData": "{\"hashIterations\":27500,\"algorithm\":\"pbkdf2-sha256\",\"additionalParameters\":{}}"
        }
      ],
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": ["default-roles-inheartive"],
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": ["offline_access"]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": ["manage-account", "view-groups"]
      }
    ]
  },
  "clients": [
    {
      "id": "9b5ba069-1eaf-498b-81f3-9236c288f32f",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/inheartive/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/inheartive/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "dd8f6364-f0a3-44e6-9b32-1a8a3bd4bb74",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/inheartive/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/realms/inheartive/account/*"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "498a3331-e635-43f4-9abd-b8f6bf2b8472",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "35fed8cb-ec0a-4593-a3b2-b120c01528cd",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "3950cd36-a7e5-4def-a942-afbcf759fcbf",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "cd53f77b-ae3d-4eba-8be2-c319d8d669d1",
      "clientId": "nestjs",
      "name": "NestJS API",
      "description": "NestJS API app internal auth guard",
      "rootUrl": "",
      "adminUrl": "",
      "baseUrl": "http://localhost:3333",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "O9Xfb2cpciI1tTgzpHWjWuA7tv3FJkWO",
      "redirectUris": ["http://localhost:3333/api/_auth/callback"],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "oidc.ciba.grant.enabled": "false",
        "client.secret.creation.time": "1668544489",
        "backchannel.logout.session.required": "false",
        "login_theme": "keycloak",
        "post.logout.redirect.uris": "+",
        "oauth2.device.authorization.grant.enabled": "false",
        "display.on.consent.screen": "false",
        "backchannel.logout.revoke.offline.tokens": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": ["profile", "email"],
      "optionalClientScopes": ["acr", "address", "phone", "offline_access", "roles", "microprofile-jwt"]
    },
    {
      "id": "7d0802b6-8e44-4222-9c4c-81649dd1273b",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    },
    {
      "id": "617b39f8-cd85-48f0-a2e5-39adf3322d76",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/inheartive/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": ["/admin/inheartive/console/*"],
      "webOrigins": ["+"],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "post.logout.redirect.uris": "+",
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "58ff55dd-6456-4b5b-ade5-83587899641d",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": ["web-origins", "acr", "profile", "roles", "email"],
      "optionalClientScopes": ["address", "phone", "offline_access", "microprofile-jwt"]
    }
  ],
  "clientScopes": [
    {
      "id": "aad84235-f965-4ce1-b46b-055a38380c35",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "e9413d07-56ad-4cfc-858b-7f5c72b06ce4",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "61244f9b-5d7c-4261-a8b8-5f691def7e5e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "c68c8a83-372e-425b-8669-74a5530c83e4",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "614471aa-1eff-4d3c-90a2-77f7c863a9f7",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "efda9225-9947-4eda-8f8a-8435f846f397",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "09993cf4-875c-4b31-bb59-87089cb575f2",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "3a7ebc9c-3186-409f-ba14-00370f3856f0",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "264ec3fa-eec1-4e6e-865b-97c8e41b6ec8",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "cc84f351-da5a-4655-ab3f-37704edd8d04",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    },
    {
      "id": "44e82ecf-5126-4841-bb9e-fce2d099c7d8",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "51c35604-c0a5-4d8e-908e-36c5921f6630",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7683bc2-3a51-4e36-b2df-aef280520816",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "d77f9891-2105-4a9c-8fa2-77853c1a5548",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "40cfa61f-ee9f-42ce-bf87-2c3c6ab83335",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5c189b7a-980e-4f4a-bd6c-fa7d70fd89f1",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "long"
          }
        },
        {
          "id": "022873e7-9deb-4a2c-a9bd-fa17663f218b",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d2a92a45-41d5-4bb8-aba5-602ee85cae71",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a1c9a0d9-d217-4fc0-8736-5afe71ecefa0",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a28fd48d-10dc-4e11-8c0c-5493c5facbc1",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3a8ac4a6-312d-4130-bdc4-dfe69b1f1aac",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2b7645e1-4d9b-4fde-80a6-ac7898c056dd",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "99c96f11-cb59-4935-b99c-5c7bf02d4751",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "de3663cf-c51c-429c-a834-a920c967c587",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "054ba384-577c-45d7-a9d4-a198feff4155",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d57c61fe-f435-45b9-9051-0b507c0f814b",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "f4a45104-52e1-460a-9c11-18b6513eec51",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ae436e0f-1075-4b19-9233-75e2a8369f3e",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "ff51b97b-88cf-4901-824a-7c6a71e8f2a2",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "38881226-a5c2-4fca-ba1b-ea0f47614c4f",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "c6dc40c4-e606-42b9-b7e5-993dee796290",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "bbd5834e-683a-4614-b50c-d6ed86ecf255",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "5bcc38ae-b447-4362-9eb5-6e5a77ddabd6",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "0e19c625-96ff-4d37-b3a9-78f1ffd7ee43",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "b6c80671-de33-4255-a94b-0f29dd3f7a25",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "25e64b04-e000-415d-bb3e-87f35eab0f31",
      "name": "acr",
      "description": "OpenID Connect scope for add acr (authentication context class reference) to the token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "15009a3e-5328-4321-bf0c-b6685f51f826",
          "name": "acr loa level",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-acr-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": ["profile", "email"],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt",
    "roles",
    "role_list",
    "acr"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {},
  "eventsEnabled": false,
  "eventsListeners": ["jboss-logging"],
  "enabledEventTypes": [],
  "adminEventsEnabled": false,
  "adminEventsDetailsEnabled": false,
  "identityProviders": [],
  "identityProviderMappers": [],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "c4db2e1e-61a9-45b0-8add-efb866f61079",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-attribute-mapper",
            "saml-user-attribute-mapper",
            "oidc-full-name-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "15d55ead-41b1-4259-afa8-1a9a24a41336",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "f2f39431-accc-4ee1-9f5e-d0ca845cc908",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": ["200"]
        }
      },
      {
        "id": "6e203c81-d7ea-4c36-b703-1ec26c405290",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": ["true"],
          "client-uris-must-match": ["true"]
        }
      },
      {
        "id": "d66d94c8-7148-49f8-94b8-9e425b2eace5",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "96ce51fd-4327-4972-b7c5-e72e5d255426",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "f6701820-249e-4fcd-9237-5d4db1991037",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": ["true"]
        }
      },
      {
        "id": "d6bbf4e3-82fd-4365-b603-2fc719db8db0",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-property-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "saml-user-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "6845b7b0-ae7c-4dba-ad6d-5e62c80d06f3",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEpAIBAAKCAQEAr6JWX+58B8/0YMdtXTqAr9bXcUYkBYb1l6YaYvUPWWOj5k4Fiy6O1daqYh9ghUgtdqyZ/G6y1DusNbepN3cBTC/7lyFIABF4NfY976yuP+CO0EhYabBP+nH1+XGjFmT5YhhrCOJSlvoS1jihu2g0C3wPr+s0PaCk6bfUqqudNrZb/GuzenexDKT0Bh/OAqQYMdE1ljQ9POvy4v0zX70FwlIUbTs1mNrI64F+fttpx6vLxLMvBYvqBV5w2vSPB2gaVc11RiGNkwQjIOePPdyeCWCMGM9YbfqIuLgNoUPNr0bWNrDhV535swIkzeJnkg2lPlj1IgaBmMUZ6uE7J6G8UwIDAQABAoIBAASloO9s2e9C+05MOIKM97avUof2uSFETt8yT+RqY3uT/VQsoEzscG8L/PoXpnAgVsObEX/yVdzzrzzEnT+QcIJZiqiXAtatn6ad20mqIfoisOSl5WD2f0c7GKz+6re++DI2Py6+/jxsZW8xlGXm/emH4MpgyMMQqwxcBs51N/WolkBXl9yOJ55AAMwjTaNBij1OgEA4Zl9Tuu495n4tW+4sd/Oee8JthGSModZiXol58SFXHwJ8SYSFYl6bK4WWetauHPwkdB762rDCIpP6pKmCkHQEeChKBIXLZO7lH8vDOCFQt5lhPhhUHt0I/mGl4q6qY2AKZt463ENHQOpcfIECgYEA7NugOA/oDGpTUjbygiZ+OKxN5fHpWAgsZJk5kolqHzqX1BnGJzpqOCo9Px9y6bCpaPgy7cn3Ql3qkYttn9BYthV8UVDWrsSA7sYqXf7ysqhixpTKg2FdQbtMBgrQDeXsdiBgoZA4tQZP6tdBVVreav1lpv7k9hdNXHteHOFqAjMCgYEAvdQMHcscwc5ew76gfDOraP4rYrpXgSZDzJgu/5uWNNiSqpxTMROMMyTquSto9HMQLJMuab4xvRbuktY9GQgcnahoOJbjfJCoKXySxXR5B/9e69CnNJrovzFm5xCvllFSttFj5bT26hb2Qg9z+xb15W34Bgcc+1H4HDJ2ZJsMfWECgYA3TKuiiywtQeHELyn9cwlDKA9j4VAOipH6xr9nVAff1KlADuhxnjTQeiQkia4lm2ZiKJiTZfUBnLW4V2o3xsf/cxK8VXhaA2zq0n9vxKdbSO8O2AxUEjZYs2bzfjDHHehQSAzni6mBskCUXr9VM0r8hb7m91nzjss0DWWSrpo2ewKBgQCK1pWKEO1Wfpbm+fys+qmK4CNhUUMA7bi24jO1tdkVi7Ux3aYnBdIL8htPFYXtDF8vCvLuWjJMx4H0mYcUUM+FLBAWG54ElFS6CyfaDUccZ1XIidJRcl96vyoxJA4YliA2IE29Sy8wpVy1klHUusVcaaL23ar/0cLy9KGNEa3/4QKBgQC/xIbu/UqMNgyVZJi5w3vEuz+1dgilya4OA32XVYys9sszXYANRV3v994T4i+6u5pInNZXQ/BcuGu8B4Mq6Lzn0KMzNmq7Ot/sKm50Ccq9lKniisTFhWUzaQRulqV3NVmom6cXapOFQu3qwtPKoDo/7dPWd802gNS+/UygyuuXfg=="
          ],
          "keyUse": ["ENC"],
          "certificate": [
            "MIICozCCAYsCBgGEfOE5kzANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAppbmhlYXJ0aXZlMB4XDTIyMTExNTE5NTkwNVoXDTMyMTExNTIwMDA0NVowFTETMBEGA1UEAwwKaW5oZWFydGl2ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAK+iVl/ufAfP9GDHbV06gK/W13FGJAWG9ZemGmL1D1ljo+ZOBYsujtXWqmIfYIVILXasmfxustQ7rDW3qTd3AUwv+5chSAAReDX2Pe+srj/gjtBIWGmwT/px9flxoxZk+WIYawjiUpb6EtY4obtoNAt8D6/rND2gpOm31KqrnTa2W/xrs3p3sQyk9AYfzgKkGDHRNZY0PTzr8uL9M1+9BcJSFG07NZjayOuBfn7bacery8SzLwWL6gVecNr0jwdoGlXNdUYhjZMEIyDnjz3cnglgjBjPWG36iLi4DaFDza9G1jaw4Ved+bMCJM3iZ5INpT5Y9SIGgZjFGerhOyehvFMCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAFKrvKWSWuBPA+iFXf4QAMe7sXa/TbkVdtYQQqnrfGY6EIEVl+nn8a1H6EccEqZ8f9RyTAXdAFMkgDjVjmg4BCQn6E2oTMv76H2oJ2TztaYCL8jLqweq9n68ZjbpSu6ZKc/pgylCr8CDhoJdVEf794W3I1F21uGV720ltw8NabkKUAyddRc39RoFBx8xdLDx28V1nAWa6PEF/HhLDOWM3YafDeDsCFb8hyZ8BR9FdB606A6XObsZgW9n6Y2F8AJnQls3XFVordixbHmcOuEJVZEffZg8y0HZuU5qOSmmYSjZp19dGkzdoQRFRvXhLKjCM3D4MePC3Vcw5zse6gG/V5Q=="
          ],
          "priority": ["100"],
          "algorithm": ["RSA-OAEP"]
        }
      },
      {
        "id": "27881be5-e442-4729-ae76-874507dbe243",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "kid": ["f3bcefe4-0ea7-4dc2-81f2-50726af45280"],
          "secret": ["-MDDvoWX-wNmNHYt5tYJ1Q"],
          "priority": ["100"]
        }
      },
      {
        "id": "0354edb3-c273-4878-85c3-3908731c0138",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "kid": ["48a94aea-edd2-4cea-b3ff-d5863e48314a"],
          "secret": ["Wpd-hGhScnM0fiPPEcJnJCeBpOqPaLv73pE61ha5NTnwPzAATFkMTK9EzpKgtHzukpuvO9QUxQtQXMyH0e_sVg"],
          "priority": ["100"],
          "algorithm": ["HS256"]
        }
      },
      {
        "id": "6f65dd76-9314-4256-8fc4-b608eaeea67d",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "privateKey": [
            "MIIEogIBAAKCAQEAl6ZlAqmgDTCprJe9bmFcgwwM6WLWKrVnj1hyKvc2K72zCFPTywLB7hruZMKR3y8r62bj4UQfu5aTNpKyxUlh4hecMG4IYKzy9CRT/Dikot0rkaptOOdw1CIgvPq/kYZm2/uvyREbq0a9stgZ7GoCRUgAHORsiudSmMRGag9npC+m18RfifDXBgrkLheVG/C7qe+WC+0iXDjD+vhzZt9rxlU8zz4lKl4NAPyKHWUi4BSbyC23apyeXBTT4uk66iiI1zQ3Bb5Uipnf7/eKUcFIhX5QyK19Uw/hkulir1JKqQ1twZ+aYZtXlsZfWUmS5r5479XjtAg17ytXgyYu+F+cqwIDAQABAoIBABicyGMUvaW2Yqtg2z1JbvbT41qTkHfRBlRFAg6IHdIekSqGVGbr9SacV1miHIOxB7tGcTCz2kSbTRw71ejgHpNPyqkviouKNko6hSj31nyaUcJr+xsTsQO04ERbm/DV8+a7JA4JiUiUjCA1I4vzrpeo9l+6EQXAQm8J1/XJt0P1ueLJaSPOzEaACdv3m96zQ3OVwpKtx9T/vVa/ls5QoFFpu+VMoxULMsIohx2GrSVM10yWDgfSCsgG5fSg+e1UMO4bVSRdoMXbiHGUTze+F8s6irUzQkwSD2DVpIvF4oUiI1tHfv39kbfYSe4JDbQJtD/Eul5iVE9dyCuVfQodxVkCgYEAzoFXwYJKpylhzIY+a+NuRnAbtXZdh5EtD7ephlcXjOJ5s/tazE6OSmPh+mcsxD6FxWPskciCqWJHKBJlF99cnxHUY8Cdu6Zt1X1/XUN/IVwzR3jnQ8MasSBaFZ8C5VNHi9RjUvfIXKtca5/Uaxqkd3w5+bdLMMKMh1BQG+PfEeMCgYEAu/9ERNo44TyHMieKzJ+aGeQm+wMut+il0N48dunvcojhBs+p0LODzl/X+HFUksNZj3b7orfMCLvodZaofYfgHLEdXgqu/hwijP1ZHvyVwKXNGguN3pnmvNO42Gt7TQzIYsbvR1dsMURxBX2sRxJPdDV0LKEIxRB1YRRcu35uJJkCgYBOcyKkd9vmbzkhGqqiD+93wOU15baYZtWIkAxN5c4jjnIPpuCSlxFFP3a8yu9dyibFmzVnGJZSxOwlU/+ltwwXvg1CrA0AGbTGEvwMsTSdtsogT9UDkB4WxiSS7CqMdjvK6i+leE5crhjZJgnrel6aqc3YiQJ+jpoWWbNlNQcsYwKBgF3LIItdeI1fPnBWbBhk9GRAgPYxA0j8CGZpyi7lzfINun9EcgvO1E7NYJnyKOjED9XU3fyzyFb/MR4hmVRvyu9lqio2GFJtRQukhqdAC5K+5dI9u304uXayBwHqteyeGQe3CsBELJVz+RNtPNuEliF7Xce6W/69lGJn31An5tnZAoGALPDsf+dOI1NIMnVyi0vaJ26xyIu/IBHh0gEk/UV4S7gOifngcuSV3Iuf57XjIEoqpAZq+PQolOegntHYPnMfknuzhlV/coW8egHplyVkVx/zUDr8xRgtOx3YCFbuUV6m4bJU7R4KS10y+LjRKYBGt4uCKDXDWwMFgJEIRkXah1w="
          ],
          "keyUse": ["SIG"],
          "certificate": [
            "MIICozCCAYsCBgGEfOE4PDANBgkqhkiG9w0BAQsFADAVMRMwEQYDVQQDDAppbmhlYXJ0aXZlMB4XDTIyMTExNTE5NTkwNVoXDTMyMTExNTIwMDA0NVowFTETMBEGA1UEAwwKaW5oZWFydGl2ZTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAJemZQKpoA0wqayXvW5hXIMMDOli1iq1Z49Ycir3Niu9swhT08sCwe4a7mTCkd8vK+tm4+FEH7uWkzaSssVJYeIXnDBuCGCs8vQkU/w4pKLdK5GqbTjncNQiILz6v5GGZtv7r8kRG6tGvbLYGexqAkVIABzkbIrnUpjERmoPZ6QvptfEX4nw1wYK5C4XlRvwu6nvlgvtIlw4w/r4c2bfa8ZVPM8+JSpeDQD8ih1lIuAUm8gtt2qcnlwU0+LpOuooiNc0NwW+VIqZ3+/3ilHBSIV+UMitfVMP4ZLpYq9SSqkNbcGfmmGbV5bGX1lJkua+eO/V47QINe8rV4MmLvhfnKsCAwEAATANBgkqhkiG9w0BAQsFAAOCAQEAAfGT5evYO5wP0vzveclPEBvMv6fhwJXOhzrc6CU2tM5X2Jx+Tz6I1lyjAAOldqUUlNglsaYGTficpwOHNZu9dbBq1gq3nDvnnw8L1BkE9+uqicF7dR5RKyfFDZgQ8WjB/zM7XeTvKaVe/Ey13V4Hn+Awpzo21HTQwRHk47A5pJM+B3M/Q055DOLTSWEk/dRTni7E2PUluw95Q9bp80wIcmglf6QNqZAU3c/xhLhi2VAiQxLoN2ddUjJ9k1mhSAuUBUTWHHqCLeTzkr+0EnoY/dyIMDr1IVHuO7hegCwZglcGboF9eFrV9x06bRsSxXCsdGusFgN44l48AdWK1C9d9w=="
          ],
          "priority": ["100"]
        }
      }
    ]
  },
  "internationalizationEnabled": false,
  "supportedLocales": [],
  "authenticationFlows": [
    {
      "id": "b3ced816-db4b-4bda-91fa-b23386517bb1",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "52dc2cf5-18b6-49cf-bb5c-1a90e380ff99",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "6454078f-198e-4c06-b834-742f7529e3a5",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "5d437a9d-f2ed-418c-bbea-176a0fd6292d",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "e17801a0-e990-4529-93ca-064db6baed3f",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "366d5252-37ef-4ccc-8edc-27b5e18686a6",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "192b69bb-86e7-46dd-ab51-445b856b5857",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "44a3555e-0cf5-4eb0-818e-15f8fb16759c",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "b9b9a330-21bf-431f-b502-08da0c1365ad",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d2e9b7d5-8bee-4fca-8c01-e7319bf783df",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "forms",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "80fded1a-46b7-4205-8bf8-d31137d9d785",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "d5183963-2012-4bbf-91f0-f09dcd6b6fb9",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "autheticatorFlow": true,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "a609f6a1-2fc1-4c20-91cf-2341591a6f60",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "2fe86418-6f67-4b2b-9625-ecfca3ebbf35",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "75b6a01f-0dd1-486b-a0fc-385dfb42d8a3",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "14c50e74-349c-4cb8-8696-0775fdaecf8a",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": true,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "85de2f54-32be-4eb2-acc5-e3177b10aac8",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": true,
          "flowAlias": "registration form",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "7fba8deb-8216-44c2-90fe-80de0602ee2a",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "fe153cb6-9371-42ab-bee9-b9739cd6ef29",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "autheticatorFlow": true,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false
        }
      ]
    },
    {
      "id": "ab2b7e72-f579-40e8-99b3-57167450293a",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "autheticatorFlow": false,
          "userSetupAllowed": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "d9c7f249-a597-47c7-a522-db6f49e1b6a8",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "05f0a78f-68e6-42ba-8af2-cb1cf0852396",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "webauthn-register",
      "name": "Webauthn Register",
      "providerId": "webauthn-register",
      "enabled": true,
      "defaultAction": false,
      "priority": 70,
      "config": {}
    },
    {
      "alias": "webauthn-register-passwordless",
      "name": "Webauthn Register Passwordless",
      "providerId": "webauthn-register-passwordless",
      "enabled": true,
      "defaultAction": false,
      "priority": 80,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaAuthRequestedUserHint": "login_hint",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5",
    "realmReusableOtpCode": "false",
    "cibaExpiresIn": "120",
    "oauth2DeviceCodeLifespan": "600",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "frontendUrl": "",
    "acr.loa.map": "{}"
  },
  "keycloakVersion": "20.0.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}
